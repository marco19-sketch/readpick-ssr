"use client";

import { useState, useEffect, useContext } from "react";
import { AppContext } from '../RootClientWrapper';
import { useRouter } from 'next/navigation';
import { useTranslation } from "react-i18next";
import Modal from "../components/Modal";
import BookResults from "../components/BookResults";
import BackToTop from "../components/BackToTop";
import FavoriteButton from "../components/FavoriteButton";
import BookCardMinimal from "../components/BookCardMinimal";
import '@/styles/Favorites.css'

function requestIdleCallbackWithFallback(callback) {
  if ("requestIdleCallback" in window) {
    return requestIdleCallback(callback);
  } else {
    return setTimeout(callback, 1);
  }
}

function cancelIdleCallbackWithFallback(id) {
  if ("cancelIdleCallback" in window) {
    cancelIdleCallback(id);
  } else {
    clearTimeout(id);
  }
}

export default function Favorites() {
  const { t } = useTranslation();
  const { user, loading, favorites = [], toggleFavorite } = useContext(AppContext);
  const router = useRouter();
  const [showModal, setShowModal] = useState(false);
  const [selectedBook, setSelectedBook] = useState(null);
  const [showFullList, setShowFullList] = useState(false);
  const mobileBgFav = "/assets/images/vitaly-girl-566x700.avif";
  const desktopBgFav = "/assets/images/vitaly-girl-1920.avif";

  // ✅ redirect if not logged in
  useEffect(() => {
    if (!loading && !user) {
      router.push("/login"); // adjust route if your login page differs
    }
  }, [user, loading, router]);

  useEffect(() => {
    const idleCallback = requestIdleCallbackWithFallback(() =>
      setShowFullList(true)
    );
    return () => cancelIdleCallbackWithFallback(idleCallback);
  }, []);

  const handleSelect = book => {
    setSelectedBook(book);
    setShowModal(true);
  };

  const isFavorite = book => favorites.some(fav => fav.id === book.id);

  // ✅ while checking auth
  if (loading) {
    return <p>{ t("loading", {defaultValue: "Loading..."})}</p>;
  }

  // ✅ in case router.push hasn’t redirected yet
  if (!user) {
    return <p>{ t("pleaseLogin", {defaultValue: "Please log in to view your favorites."})}</p>;
  }

  return (
    <h2>Test</h2>
  );
}
